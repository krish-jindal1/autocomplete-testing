{"version":3,"file":"index.umd.js","sources":["../src/autocomplete-v4.js","../src/autocomplete.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { IconButton, TextField, useMediaQuery } from \"@material-ui/core\";\r\nimport { useTheme, withStyles } from \"@material-ui/core/styles\";\r\nimport { ArrowBack } from \"@material-ui/icons\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nconst styles = (theme) => ({\r\n  wrapper: {\r\n    position: \"relative\",\r\n  },\r\n  focused: {\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    padding: \"16px 12px 16px 0px\",\r\n    background: theme.palette.background.paper,\r\n    zIndex: 1300,\r\n    boxShadow: \"0 2px 8px rgba(0,0,0,0.2)\",\r\n    height: \"100vh\",\r\n    maxWidth: \"-webkit-fill-available\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  backButton: {\r\n    alignSelf: \"flex-start\",\r\n    marginBottom: \"18px\",\r\n  },\r\n  paper: {\r\n    boxShadow: \"none\",\r\n    width: \"100vw !important\",\r\n    left: \"0 !important\",\r\n    borderTop: `1.5px solid ${grey[400]}`,\r\n    borderRadius: 0,\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  popper: {\r\n    width: \"101vw !important\",\r\n    left: \"0 !important\",\r\n    right: \"0 !important\",\r\n    overflow: \"hidden\",\r\n  },\r\n});\r\n\r\nconst ResponsiveAutocomplete = (props) => {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const {\r\n    classes,\r\n    mobileBackgroundClassName,\r\n    backButtonClassName,\r\n    renderInput,\r\n    onFocus,\r\n    onClose,\r\n    blurOnSelect,\r\n    ...autocompleteProps\r\n  } = props;\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n  const isMobileFocused = isFocused && isMobile;\r\n\r\n  // Lock page scroll when mobile input is focused\r\n  useEffect(() => {\r\n    if (isMobileFocused) {\r\n      document.body.style.overflow = \"hidden\";\r\n      document.documentElement.style.overflow = \"hidden\";\r\n      document.body.style.position = \"fixed\";\r\n      document.body.style.width = \"100%\";\r\n    } else {\r\n      document.body.style.overflow = \"\";\r\n      document.documentElement.style.overflow = \"\";\r\n      document.body.style.position = \"\";\r\n      document.body.style.width = \"\";\r\n    }\r\n  }, [isFocused, isMobile]);\r\n\r\n  const handleFocus = (e) => {\r\n    setIsFocused(true);\r\n    onFocus && onFocus(e);\r\n  };\r\n\r\n  const handleClose = (event,reason) => {\r\n    if(reason!='toggleInput')\r\n    setIsFocused(false);\r\n    onClose && onClose(event,reason);\r\n  };\r\n\r\n  const wrappedRenderInput = (params) => {\r\n    const inputElement = props.renderInput ? (\r\n      renderInput(params)\r\n    ) : (\r\n      <TextField {...params} label=\"Search\" variant=\"outlined\" />\r\n    );\r\n    return React.cloneElement(inputElement, {\r\n      ...inputElement.props,\r\n      autoFocus: isFocused,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        isMobileFocused\r\n          ? `${classes.focused} ${mobileBackgroundClassName || \"\"}`\r\n          : classes.wrapper\r\n      }\r\n    >\r\n      {isMobileFocused && (\r\n        <IconButton\r\n          className={`${classes.backButton} ${backButtonClassName || \"\"}`}\r\n        >\r\n          <ArrowBack />\r\n        </IconButton>\r\n      )}\r\n      <Autocomplete\r\n        {...autocompleteProps}\r\n        onFocus={handleFocus}\r\n        onClose={handleClose}\r\n        openOnFocus\r\n        classes={{\r\n          ...(autocompleteProps.classes || {}),\r\n          ...(isMobileFocused\r\n            ? {\r\n                paper: `${autocompleteProps.classes?.paper || \"\"} ${\r\n                  classes.paper\r\n                }`.trim(),\r\n                popper: `${autocompleteProps.classes?.popper || \"\"} ${\r\n                  classes.popper\r\n                }`.trim(),\r\n              }\r\n            : {}),\r\n        }}\r\n        blurOnSelect={isMobile ? true : blurOnSelect}\r\n        renderInput={isMobile ? wrappedRenderInput : renderInput}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ResponsiveAutocomplete);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Autocomplete,\r\n  IconButton,\r\n  TextField,\r\n  useMediaQuery,\r\n  useTheme,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport { grey } from \"@mui/material/colors\";\r\n\r\nconst ResponsiveAutocomplete = (props) => {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n\r\n  const {\r\n    mobileBackgroundSx,\r\n    mobileBackgroundClassName,\r\n    backButtonSx,\r\n    backButtonClassName,\r\n    renderInput,\r\n    onFocus,\r\n    onClose,\r\n    slotProps = {},\r\n    blurOnSelect,\r\n    ...autocompleteProps\r\n  } = props;\r\n\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const isMobileFocused = isFocused && isMobile;\r\n\r\n  // Lock page scroll when mobile input is focused\r\n  useEffect(() => {\r\n    const bodyStyle = document.body.style;\r\n    const htmlStyle = document.documentElement.style;\r\n\r\n    if (isMobileFocused) {\r\n      bodyStyle.overflow = \"hidden\";\r\n      htmlStyle.overflow = \"hidden\";\r\n      bodyStyle.position = \"fixed\";\r\n      bodyStyle.width = \"100%\";\r\n    } else {\r\n      bodyStyle.overflow = \"\";\r\n      htmlStyle.overflow = \"\";\r\n      bodyStyle.position = \"\";\r\n      bodyStyle.width = \"\";\r\n    }\r\n  }, [isFocused,isMobile]);\r\n\r\n  const handleFocus = (e) => {\r\n    setIsFocused(true);\r\n    onFocus?.(e);\r\n  };\r\n\r\n  const handleClose = (event,reason) => {\r\n    if(reason!='toggleInput')\r\n    setIsFocused(false);\r\n    onClose?.(event,reason);\r\n  };\r\n\r\n  const wrappedRenderInput = (params) => {\r\n    const inputElement = renderInput ? (\r\n      renderInput(params)\r\n    ) : (\r\n      <TextField {...params} label=\"Search\" variant=\"outlined\" />\r\n    );\r\n\r\n    return React.cloneElement(inputElement, {\r\n      ...inputElement.props,\r\n      autoFocus: isFocused,\r\n    });\r\n  };\r\n\r\n  const containerSx = isMobileFocused\r\n    ? {\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n        width: \"100%\",\r\n        padding: \"16px 12px 16px 0px\",\r\n        background: theme.palette.background.paper,\r\n        zIndex: 1300,\r\n        boxShadow: \"0 2px 8px rgba(0,0,0,0.2)\",\r\n        height: \"100vh\",\r\n        maxWidth: \"-webkit-fill-available\",\r\n        display: \"flex\",\r\n        justifyContent: \"flex-start\",\r\n        flexDirection: \"row\",\r\n        ...mobileBackgroundSx,\r\n      }\r\n    : {\r\n        position: \"relative\",\r\n      };\r\n\r\n  const paperSx = isMobileFocused\r\n    ? {\r\n        boxShadow: \"none\",\r\n        width: \"100vw\",\r\n        left: 0,\r\n        borderTop: `1.5px solid ${grey[400]}`,\r\n        borderRadius: 0,\r\n        mt: 1,\r\n      }\r\n    : {};\r\n\r\n  const popperSx = isMobileFocused\r\n    ? {\r\n        width: \"101vw !important\",\r\n        left: \"0 !important\",\r\n        right: \"0 !important\",\r\n        overflow: \"hidden\",\r\n      }\r\n    : {};\r\n\r\n  return (\r\n    <Box\r\n      className={isMobileFocused ? mobileBackgroundClassName : undefined}\r\n      sx={containerSx}\r\n    >\r\n      {isMobileFocused && (\r\n        <IconButton\r\n          className={backButtonClassName}\r\n          sx={{\r\n            alignSelf: \"flex-start\",\r\n            marginBottom: \"18px\",\r\n            ...backButtonSx,\r\n          }}\r\n          onClick={handleClose}\r\n        >\r\n          <ArrowBackIcon />\r\n        </IconButton>\r\n      )}\r\n\r\n      <Autocomplete\r\n        {...autocompleteProps}\r\n        onFocus={handleFocus}\r\n        onClose={handleClose}\r\n        renderInput={isMobile ? wrappedRenderInput : renderInput}\r\n        openOnFocus\r\n        blurOnSelect={isMobile ? true : blurOnSelect}\r\n        slotProps={{\r\n          paper: {\r\n            ...slotProps.paper,\r\n            sx: { ...paperSx, ...(slotProps.paper?.sx || {}) },\r\n          },\r\n          popper: {\r\n            ...slotProps.popper,\r\n            sx: { ...popperSx, ...(slotProps.popper?.sx || {}) },\r\n          },\r\n          ...slotProps,\r\n        }}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ResponsiveAutocomplete;\r\n"],"names":["withStyles","theme","wrapper","position","focused","top","left","width","padding","background","palette","paper","zIndex","boxShadow","height","maxWidth","display","justifyContent","backButton","alignSelf","marginBottom","borderTop","grey","borderRadius","marginTop","spacing","popper","right","overflow","withTheme","props","_autocompleteProps$cl","_autocompleteProps$cl2","isFocused","setIsFocused","useState","classes","mobileBackgroundClassName","backButtonClassName","renderInput","onFocus","onClose","blurOnSelect","autocompleteProps","useTheme","isMobile","useMediaQuery","breakpoints","down","isMobileFocused","useEffect","document","body","style","documentElement","React","default","createElement","className","IconButton","ArrowBack","Autocomplete","_extends","e","handleClose","event","reason","openOnFocus","trim","params","inputElement","TextField","label","variant","cloneElement","autoFocus","_slotProps$paper","_slotProps$popper","mobileBackgroundSx","backButtonSx","slotProps","bodyStyle","htmlStyle","containerSx","flexDirection","paperSx","mt","popperSx","Box","sx","onClick","ArrowBackIcon"],"mappings":"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"}